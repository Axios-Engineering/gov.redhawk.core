/* Generated By:JavaCC: Do not edit this line. IDLParserConstants.java */
/**
 * This file is protected by Copyright.
 * Please refer to the COPYRIGHT file distributed with this source distribution.
 *
 * This file is part of REDHAWK IDE.
 *
 * All rights reserved.  This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html.
 *
 */
package gov.redhawk.eclipsecorba.idl.internal.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface IDLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PREPROCESSOR_OUTPUT = 6;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 7;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int ABSTRACT = 11;
  /** RegularExpression Id. */
  int EXCEPTION = 12;
  /** RegularExpression Id. */
  int INOUT = 13;
  /** RegularExpression Id. */
  int PROVIDES = 14;
  /** RegularExpression Id. */
  int TRUNCATABLE = 15;
  /** RegularExpression Id. */
  int ANY = 16;
  /** RegularExpression Id. */
  int EMITS = 17;
  /** RegularExpression Id. */
  int INTERFACE = 18;
  /** RegularExpression Id. */
  int PUBLIC = 19;
  /** RegularExpression Id. */
  int TYPEDEF = 20;
  /** RegularExpression Id. */
  int ATTRIBUTE = 21;
  /** RegularExpression Id. */
  int ENUM = 22;
  /** RegularExpression Id. */
  int LOCAL = 23;
  /** RegularExpression Id. */
  int PUBLISHES = 24;
  /** RegularExpression Id. */
  int TYPEID = 25;
  /** RegularExpression Id. */
  int BOOLEAN = 26;
  /** RegularExpression Id. */
  int EVENTTYPE = 27;
  /** RegularExpression Id. */
  int LONG = 28;
  /** RegularExpression Id. */
  int RAISES = 29;
  /** RegularExpression Id. */
  int TYPEPREFIX = 30;
  /** RegularExpression Id. */
  int CASE = 31;
  /** RegularExpression Id. */
  int FACTORY = 32;
  /** RegularExpression Id. */
  int MODULE = 33;
  /** RegularExpression Id. */
  int READONLY = 34;
  /** RegularExpression Id. */
  int UNSIGNED = 35;
  /** RegularExpression Id. */
  int CHAR = 36;
  /** RegularExpression Id. */
  int FALSE = 37;
  /** RegularExpression Id. */
  int MULTIPLE = 38;
  /** RegularExpression Id. */
  int SET_RAISES = 39;
  /** RegularExpression Id. */
  int UNION = 40;
  /** RegularExpression Id. */
  int COMPONENT = 41;
  /** RegularExpression Id. */
  int FINDER = 42;
  /** RegularExpression Id. */
  int NATIVE = 43;
  /** RegularExpression Id. */
  int SEQUENCE = 44;
  /** RegularExpression Id. */
  int USES = 45;
  /** RegularExpression Id. */
  int CONST = 46;
  /** RegularExpression Id. */
  int FIXED = 47;
  /** RegularExpression Id. */
  int SHORT = 48;
  /** RegularExpression Id. */
  int VALUE_BASE = 49;
  /** RegularExpression Id. */
  int CONSUMES = 50;
  /** RegularExpression Id. */
  int FLOAT = 51;
  /** RegularExpression Id. */
  int OCTET = 52;
  /** RegularExpression Id. */
  int IDL_STRING = 53;
  /** RegularExpression Id. */
  int VALUETYPE = 54;
  /** RegularExpression Id. */
  int CONTEXT = 55;
  /** RegularExpression Id. */
  int GET_RAISES = 56;
  /** RegularExpression Id. */
  int ONEWAY = 57;
  /** RegularExpression Id. */
  int STRUCT = 58;
  /** RegularExpression Id. */
  int VOID = 59;
  /** RegularExpression Id. */
  int CUSTOM = 60;
  /** RegularExpression Id. */
  int HOME = 61;
  /** RegularExpression Id. */
  int OUT = 62;
  /** RegularExpression Id. */
  int SUPPORTS = 63;
  /** RegularExpression Id. */
  int WCHAR = 64;
  /** RegularExpression Id. */
  int _DEFAULT = 65;
  /** RegularExpression Id. */
  int IMPORT = 66;
  /** RegularExpression Id. */
  int PRIMARYKEY = 67;
  /** RegularExpression Id. */
  int SWITCH = 68;
  /** RegularExpression Id. */
  int WSTRING = 69;
  /** RegularExpression Id. */
  int DOUBLE = 70;
  /** RegularExpression Id. */
  int IN = 71;
  /** RegularExpression Id. */
  int PRIVATE = 72;
  /** RegularExpression Id. */
  int TRUE = 73;
  /** RegularExpression Id. */
  int OBJECT = 74;
  /** RegularExpression Id. */
  int MANAGES = 75;
  /** RegularExpression Id. */
  int ID = 100;
  /** RegularExpression Id. */
  int OCTALINT = 101;
  /** RegularExpression Id. */
  int DECIMALINT = 102;
  /** RegularExpression Id. */
  int FIXED_PT = 103;
  /** RegularExpression Id. */
  int HEXADECIMALINT = 104;
  /** RegularExpression Id. */
  int FLOATONE = 105;
  /** RegularExpression Id. */
  int FLOATTWO = 106;
  /** RegularExpression Id. */
  int CHARACTER = 107;
  /** RegularExpression Id. */
  int WCHARACTER = 108;
  /** RegularExpression Id. */
  int STRING = 109;
  /** RegularExpression Id. */
  int WSTRING_LITERAL = 110;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<PREPROCESSOR_OUTPUT>",
    "<SINGLE_LINE_COMMENT>",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 10>",
    "\"abstract\"",
    "\"exception\"",
    "\"inout\"",
    "\"provides\"",
    "\"truncatable\"",
    "\"any\"",
    "\"emits\"",
    "\"interface\"",
    "\"public\"",
    "\"typedef\"",
    "\"attribute\"",
    "\"enum\"",
    "\"local\"",
    "\"publishes\"",
    "\"typeid\"",
    "\"boolean\"",
    "\"eventtype\"",
    "\"long\"",
    "\"raises\"",
    "\"typeprefix\"",
    "\"case\"",
    "\"factory\"",
    "\"module\"",
    "\"readonly\"",
    "\"unsigned\"",
    "\"char\"",
    "\"FALSE\"",
    "\"multiple\"",
    "\"setraises\"",
    "\"union\"",
    "\"component\"",
    "\"finder\"",
    "\"native\"",
    "\"sequence\"",
    "\"uses\"",
    "\"const\"",
    "\"fixed\"",
    "\"short\"",
    "\"ValueBase\"",
    "\"consumes\"",
    "\"float\"",
    "\"octet\"",
    "\"string\"",
    "\"valuetype\"",
    "\"context\"",
    "\"getraises\"",
    "\"oneway\"",
    "\"struct\"",
    "\"void\"",
    "\"custom\"",
    "\"home\"",
    "\"out\"",
    "\"supports\"",
    "\"wchar\"",
    "\"default\"",
    "\"import\"",
    "\"primarykey\"",
    "\"switch\"",
    "\"wstring\"",
    "\"double\"",
    "\"in\"",
    "\"private\"",
    "\"TRUE\"",
    "\"Object\"",
    "\"manages\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\",\"",
    "\"::\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"|\"",
    "\"^\"",
    "\"&\"",
    "\">>\"",
    "\"<<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"~\"",
    "\"<\"",
    "\">\"",
    "\"[\"",
    "\"]\"",
    "<ID>",
    "<OCTALINT>",
    "<DECIMALINT>",
    "<FIXED_PT>",
    "<HEXADECIMALINT>",
    "<FLOATONE>",
    "<FLOATTWO>",
    "<CHARACTER>",
    "<WCHARACTER>",
    "<STRING>",
    "<WSTRING_LITERAL>",
  };

}
