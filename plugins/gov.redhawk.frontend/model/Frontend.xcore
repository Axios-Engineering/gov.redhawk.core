@Ecore(nsURI="http://redhawk.gov/frontend/1.0.0")
@GenModel(prefix="Frontend", dataTypeConverters="true", binaryCompantibleReflectiveMethods="true", fileExtensions="xml", colorProviders="true", fontProviders="true", tablesProviders="true", resource="XML", templateDirectory="/gov.redhawk.frontend/templates", forceOverwrite="true", modelPluginVariables="org.eclipse.xtext.xbase.lib")
@GenModel(contentTypeIdentifier="http://redhawk.gov/frontend/1.0.0")
@GenModel(editDirectory="/gov.redhawk.frontend.edit/src-gen")
package gov.redhawk.frontend

import gov.redhawk.model.sca.ScaStructProperty
import gov.redhawk.model.sca.ScaDevice

class ModelDevice {
	contains TunerContainer tunerContainer opposite modelDevice
	ScaDevice scaDevice
}

class TunerContainer {
	container ModelDevice modelDevice opposite tunerContainer
	contains Tuner[] tuners opposite tunerContainer
}

type ScaDevice wraps ScaDevice < ? >

type TunerStruct wraps ScaStructProperty

class Tuner { 
	TunerStruct tunerStruct
    @GenModel(property="Readonly")
	String allocationID
	@GenModel(property="Readonly")
	String tunerType
	String tunerID
	boolean deviceControl
	String groupID
	String rfFlowID
	container TunerContainer tunerContainer opposite tuners
	contains TunerStatus tunerStatus opposite tuner
	double gain
}

class TunerStatus {
	@GenModel(property="Readonly")
	container Tuner tuner opposite tunerStatus
	double centerFrequency
	double bandwidth
	double bandwidthTolerance
	double sampleRate
	double sampleRateTolerance
	boolean enabled
}
