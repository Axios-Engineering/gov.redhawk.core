@Ecore(nsURI="http://redhawk.gov/frontend/1.0.0")
@GenModel(prefix="Frontend", dataTypeConverters="true", binaryCompantibleReflectiveMethods="true", fileExtensions="xml", colorProviders="true", fontProviders="true", tablesProviders="true", resource="XML", templateDirectory="/gov.redhawk.frontend/templates", forceOverwrite="true", modelPluginVariables="org.eclipse.xtext.xbase.lib")
@GenModel(contentTypeIdentifier="http://redhawk.gov/frontend/1.0.0")
@GenModel(editDirectory="/gov.redhawk.frontend.edit/src-gen")
package gov.redhawk.frontend

import gov.redhawk.model.sca.ScaStructProperty

class AnalogDevice {
	contains TunerContainer tunerContainer opposite analogDevice
}

class TunerContainer {
	container AnalogDevice analogDevice opposite tunerContainer
	TunerStruct[] tuners  
}

type TunerStruct wraps ScaStructProperty

class Tuner { 
    @GenModel(property="Readonly")
	String allocationID
	@GenModel(property="Readonly")
	String tunerType
	boolean deviceControl
	String groupID
	String rfFlowID
	contains TunerStatus tunerStatus opposite tuner
	float gain
}

class TunerStatus {
	@GenModel(property="Readonly")
	container Tuner tuner opposite tunerStatus
	double centerFrequency
	double bandwidth
	double sampleRate
	boolean enabled
}
